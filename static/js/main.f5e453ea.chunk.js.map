{"version":3,"sources":["components/TableList.js","components/Week.js","components/WheatherContainer.js","App.js","index.js"],"names":["TableList","props","Grid","container","item","xs","className","gData","selected","onClick","e","gSetState","data","curData","Typography","oneData","list","fiveData","Divider","map","x","date","Date","setTime","dt","spacing","sx","padding","getHours","getMinutes","deg","wind","Week","weeks","day","title","mode","useEffect","forEach","getDay","w","length","weather","main","console","log","justifyContent","TextField","label","fullWidth","variant","InputProps","endAdornment","InputAdornment","position","margin","display","WheatherContainer","toDateString","App","useState","state","setState","Weekdata","dayData","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.f5e453ea.chunk.js","sourcesContent":["import { Divider, Grid, Typography } from \"@mui/material\";\r\nimport oneData from \"../data/1day.json\";\r\nimport fiveData from \"../data/5day.json\";\r\nimport curData from \"../data/current.json\";\r\nexport const TableList = (props) => {\r\n  return (\r\n    <div>\r\n      <Grid container>\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          className={`${props.gData.selected === \"today\" ? \"selected\" : \"but\"}`}\r\n          onClick={(e) =>\r\n            props.gSetState({\r\n              ...props.gData,\r\n              selected: \"today\",\r\n              data: [curData]\r\n            })\r\n          }\r\n        >\r\n          <Typography> Today</Typography>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          className={`${props.gData.selected === \"week\" ? \"selected\" : \"but\"}`}\r\n          onClick={(e) =>\r\n            props.gSetState({\r\n              ...props.gData,\r\n              selected: \"week\",\r\n              data: oneData.list\r\n            })\r\n          }\r\n        >\r\n          Week\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          className={`${props.gData.selected === \"month\" ? \"selected\" : \"but\"}`}\r\n          onClick={(e) =>\r\n            props.gSetState({\r\n              ...props.gData,\r\n              selected: \"month\",\r\n              data: fiveData.list\r\n            })\r\n          }\r\n        >\r\n          Month\r\n        </Grid>\r\n        <Grid item xs={11}>\r\n          <Divider />\r\n        </Grid>\r\n      </Grid>\r\n      {props.gData.data.map((x) => {\r\n        let date = new Date();\r\n        date.setTime(x.dt);\r\n\r\n        return (\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={5} sx={{ padding: \"6%\" }}>\r\n              {date.getHours()}:{date.getMinutes()}\r\n            </Grid>\r\n            <Grid item xs={2} sx={{ padding: \"6%\" }}>\r\n              index\r\n            </Grid>\r\n            <Grid item xs={2} sx={{ padding: \"6%\" }}>\r\n              {x.deg || x.wind.deg}\r\n            </Grid>\r\n          </Grid>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import { Grid, InputAdornment, TextField } from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\nimport CloudIcon from \"@mui/icons-material/Cloud\";\r\nimport ThunderstormIcon from \"@mui/icons-material/Thunderstorm\";\r\n\r\nimport fiveData from \"../data/5day.json\";\r\nexport const Week = (props) => {\r\n  let weeks = [\r\n    { day: 1, title: \"Monday\", mode: \"\" },\r\n    { day: 2, title: \"Tuesday\", mode: \"\" },\r\n    { day: 3, title: \"Wednesday\", mode: \"\" },\r\n    { day: 4, title: \"Thursday\", mode: \"\" }\r\n  ];\r\n  useEffect(() => {\r\n    fiveData.list.forEach((x) => {\r\n      let date = new Date();\r\n      date.setTime(x.dt);\r\n      date = date.getDay();\r\n      weeks = weeks.map((w) =>\r\n        w.mode.length === 0 && w.day == date\r\n          ? { ...w, mode: x.weather[0].main }\r\n          : w\r\n      );\r\n    });\r\n  }, []);\r\n  console.log(weeks);\r\n  return (\r\n    <Grid container spacing={1} justifyContent=\"center\">\r\n      <Grid item xs={11}>\r\n        <TextField\r\n          label=\"Forecast\"\r\n          fullWidth\r\n          variant=\"standard\"\r\n          InputProps={{\r\n            endAdornment: <InputAdornment position=\"end\">more</InputAdornment>\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Grid container>\r\n          {weeks.map((x) => (\r\n            <Grid key={x.day} sx={{ margin: \"10px\", display: \"grid\" }}>\r\n              {x.mode === \"rain\" ? <CloudIcon /> : <ThunderstormIcon />}\r\n              {x.title}\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import { Grid, Typography } from \"@mui/material\";\r\nimport { TableList } from \"./TableList\";\r\nimport { Week } from \"./Week\";\r\n\r\nexport const WheatherContainer = (props) => {\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={4} className=\"leftnav\">\r\n        <Typography className=\"date\">{new Date().toDateString()}</Typography>\r\n\r\n        <Typography className=\"degree\">{21}*</Typography>\r\n        <Typography className=\"degree1\">china Bejing</Typography>\r\n      </Grid>\r\n      <Grid item xs={8}>\r\n        <Week {...props} />\r\n        <TableList {...props} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import Axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport \"./styles.css\";\nimport Weekdata from \"./data/5day.json\";\nimport dayData from \"./data/1day.json\";\nimport { WheatherContainer } from \"./components/WheatherContainer\";\n\nexport default function App() {\n  const [state, setState] = useState({\n    data: []\n  });\n  useEffect(() => {\n    // let api='http://api.openweathermap.org/data/2.5/forecast?q=London&appid=048c43a2f7e00f37c3b4044df2ec3128'\n    // Axios.get(api).then((res) => {\n    //   debugger;\n    //   console.log(res);\n    // });\n    console.log(Weekdata.list);\n    setState({\n      ...state,\n      data: dayData.list,\n      selected: \"today\"\n    });\n  }, []);\n  return (\n    <div className=\"App\">\n      <div>\n        <WheatherContainer gData={state} gSetState={setState} />\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}